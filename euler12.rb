# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?
tri = 1
factor = 1
count = 0

while true
  divisors = []
  i = 1
  while factor <= tri     # factor = 1, tri = 3
    if tri % factor == 0  # tri = 3, factor = 1, true
      divisors << factor  # divisors[1]
    end
    factor += 1           # factor = 2
  end
  p divisors.length
  p divisors.last
  if divisors.length >= 500
    p divisors.last
    return
  end
  factor = 1        
  count += 1
  tri = 1
  count.times do
    i += 1
    tri += i
  end
  p "count: #{count}"
end

# this code is so slow. might take an hour or even more??